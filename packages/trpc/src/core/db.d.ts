/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AiModel {
  category: string;
  created_at: Timestamp;
  description: string;
  id: Generated<Int8>;
  metadata: Json | null;
  name: string;
  provider_id: Int8;
  updated_at: Timestamp;
}

export interface AiProvider {
  country: string;
  created_at: Timestamp;
  description: string;
  id: Generated<Int8>;
  metadata: Json | null;
  name: string;
  updated_at: Timestamp;
}

export interface AppAction {
  created_at: Timestamp;
  deleted_at: Timestamp | null;
  description: string;
  id: Generated<Int8>;
  is_public: boolean;
  metadata: Json | null;
  name: string;
  path: string;
  router_id: Int8;
  updated_at: Timestamp;
}

export interface AppRouter {
  created_at: Timestamp;
  deleted_at: Timestamp | null;
  description: string;
  id: Generated<Int8>;
  is_public: boolean;
  metadata: Json | null;
  name: string;
  path: string;
  template: string;
  updated_at: Timestamp;
}

export interface AppUser {
  blocked_until: Timestamp | null;
  created_at: Timestamp;
  deleted_at: Timestamp | null;
  id: string;
  last_login_at: Timestamp | null;
  last_logout_at: Timestamp | null;
  metadata: Json | null;
  updated_at: Timestamp;
}

export interface Channel {
  created_at: Timestamp;
  deleted_at: Timestamp | null;
  description: string;
  id: Generated<Int8>;
  name: string;
  password_encrypted: string;
  updated_at: Timestamp;
}

export interface ChannelHistory {
  channel_id: Int8;
  created_at: Timestamp;
  id: Generated<Int8>;
  message: string;
  metadata: Json | null;
  model_id: Int8;
  role: string;
  updated_at: Timestamp;
  user_id: string;
}

export interface ChannelParticipant {
  banned_until: Timestamp | null;
  channel_id: Int8;
  created_at: Timestamp;
  deleted_at: Timestamp | null;
  id: Generated<Int8>;
  is_master: boolean;
  metadata: Json | null;
  muted_until: Timestamp | null;
  updated_at: Timestamp;
  user_id: string;
}

export interface Guestbook {
  comment: string;
  created_at: Timestamp;
  deleted_at: Timestamp | null;
  id: Generated<Int8>;
  metadata: Json | null;
  nickname: string;
  updated_at: Timestamp;
}

export interface UserAiModel {
  api_endpoint: string;
  api_key_encrypted: string;
  created_at: Timestamp;
  description: string;
  id: Generated<Int8>;
  model_id: Int8;
  name: string;
  updated_at: Timestamp;
  user_id: string;
}

export interface UserLog {
  action: string;
  created_at: Timestamp;
  details: string | null;
  id: Generated<Int8>;
  level: string;
  metadata: Json | null;
  user_agent: string;
  user_id: string | null;
  user_ip: string;
}

export interface DB {
  ai_model: AiModel;
  ai_provider: AiProvider;
  app_action: AppAction;
  app_router: AppRouter;
  app_user: AppUser;
  channel: Channel;
  channel_history: ChannelHistory;
  channel_participant: ChannelParticipant;
  guestbook: Guestbook;
  user_ai_model: UserAiModel;
  user_log: UserLog;
}
