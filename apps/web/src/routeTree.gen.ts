/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PublicRouteImport } from './routes/_public'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as PublicIndexRouteImport } from './routes/_public/index'
import { Route as PublicLogoutCallbackRouteImport } from './routes/_public/logout.callback'
import { Route as PublicLoginCallbackRouteImport } from './routes/_public/login.callback'
import { Route as PublicPageOverviewRouteImport } from './routes/_public/_page/overview'
import { Route as PublicPageLabRouteImport } from './routes/_public/_page/lab'
import { Route as PublicPageHomeRouteImport } from './routes/_public/_page/home'
import { Route as PublicPageContactRouteImport } from './routes/_public/_page/contact'
import { Route as PublicPageAboutRouteImport } from './routes/_public/_page/about'
import { Route as ProtectedPageDoodleRouteImport } from './routes/_protected/_page/doodle'
import { Route as ProtectedPageCodeEditorRouteImport } from './routes/_protected/_page/code-editor'
import { Route as ProtectedPageChannelIndexRouteImport } from './routes/_protected/_page/channel.index'
import { Route as ProtectedPageChannelIdRouteImport } from './routes/_protected/_page/channel.$id'

const PublicRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/_protected/route.lazy').then((d) => d.Route),
)
const PublicIndexRoute = PublicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)
const PublicLogoutCallbackRoute = PublicLogoutCallbackRouteImport.update({
  id: '/logout/callback',
  path: '/logout/callback',
  getParentRoute: () => PublicRoute,
} as any)
const PublicLoginCallbackRoute = PublicLoginCallbackRouteImport.update({
  id: '/login/callback',
  path: '/login/callback',
  getParentRoute: () => PublicRoute,
} as any)
const PublicPageOverviewRoute = PublicPageOverviewRouteImport.update({
  id: '/_page/overview',
  path: '/overview',
  getParentRoute: () => PublicRoute,
} as any)
const PublicPageLabRoute = PublicPageLabRouteImport.update({
  id: '/_page/lab',
  path: '/lab',
  getParentRoute: () => PublicRoute,
} as any)
const PublicPageHomeRoute = PublicPageHomeRouteImport.update({
  id: '/_page/home',
  path: '/home',
  getParentRoute: () => PublicRoute,
} as any)
const PublicPageContactRoute = PublicPageContactRouteImport.update({
  id: '/_page/contact',
  path: '/contact',
  getParentRoute: () => PublicRoute,
} as any)
const PublicPageAboutRoute = PublicPageAboutRouteImport.update({
  id: '/_page/about',
  path: '/about',
  getParentRoute: () => PublicRoute,
} as any)
const ProtectedPageDoodleRoute = ProtectedPageDoodleRouteImport.update({
  id: '/_page/doodle',
  path: '/doodle',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedPageCodeEditorRoute = ProtectedPageCodeEditorRouteImport.update({
  id: '/_page/code-editor',
  path: '/code-editor',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedPageChannelIndexRoute =
  ProtectedPageChannelIndexRouteImport.update({
    id: '/_page/channel/',
    path: '/channel/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedPageChannelIdRoute = ProtectedPageChannelIdRouteImport.update({
  id: '/_page/channel/$id',
  path: '/channel/$id',
  getParentRoute: () => ProtectedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof PublicIndexRoute
  '/code-editor': typeof ProtectedPageCodeEditorRoute
  '/doodle': typeof ProtectedPageDoodleRoute
  '/about': typeof PublicPageAboutRoute
  '/contact': typeof PublicPageContactRoute
  '/home': typeof PublicPageHomeRoute
  '/lab': typeof PublicPageLabRoute
  '/overview': typeof PublicPageOverviewRoute
  '/login/callback': typeof PublicLoginCallbackRoute
  '/logout/callback': typeof PublicLogoutCallbackRoute
  '/channel/$id': typeof ProtectedPageChannelIdRoute
  '/channel': typeof ProtectedPageChannelIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof PublicIndexRoute
  '/code-editor': typeof ProtectedPageCodeEditorRoute
  '/doodle': typeof ProtectedPageDoodleRoute
  '/about': typeof PublicPageAboutRoute
  '/contact': typeof PublicPageContactRoute
  '/home': typeof PublicPageHomeRoute
  '/lab': typeof PublicPageLabRoute
  '/overview': typeof PublicPageOverviewRoute
  '/login/callback': typeof PublicLoginCallbackRoute
  '/logout/callback': typeof PublicLogoutCallbackRoute
  '/channel/$id': typeof ProtectedPageChannelIdRoute
  '/channel': typeof ProtectedPageChannelIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_protected': typeof ProtectedRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_public/': typeof PublicIndexRoute
  '/_protected/_page/code-editor': typeof ProtectedPageCodeEditorRoute
  '/_protected/_page/doodle': typeof ProtectedPageDoodleRoute
  '/_public/_page/about': typeof PublicPageAboutRoute
  '/_public/_page/contact': typeof PublicPageContactRoute
  '/_public/_page/home': typeof PublicPageHomeRoute
  '/_public/_page/lab': typeof PublicPageLabRoute
  '/_public/_page/overview': typeof PublicPageOverviewRoute
  '/_public/login/callback': typeof PublicLoginCallbackRoute
  '/_public/logout/callback': typeof PublicLogoutCallbackRoute
  '/_protected/_page/channel/$id': typeof ProtectedPageChannelIdRoute
  '/_protected/_page/channel/': typeof ProtectedPageChannelIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/code-editor'
    | '/doodle'
    | '/about'
    | '/contact'
    | '/home'
    | '/lab'
    | '/overview'
    | '/login/callback'
    | '/logout/callback'
    | '/channel/$id'
    | '/channel'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/code-editor'
    | '/doodle'
    | '/about'
    | '/contact'
    | '/home'
    | '/lab'
    | '/overview'
    | '/login/callback'
    | '/logout/callback'
    | '/channel/$id'
    | '/channel'
  id:
    | '__root__'
    | '/_protected'
    | '/_public'
    | '/_public/'
    | '/_protected/_page/code-editor'
    | '/_protected/_page/doodle'
    | '/_public/_page/about'
    | '/_public/_page/contact'
    | '/_public/_page/home'
    | '/_public/_page/lab'
    | '/_public/_page/overview'
    | '/_public/login/callback'
    | '/_public/logout/callback'
    | '/_protected/_page/channel/$id'
    | '/_protected/_page/channel/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/logout/callback': {
      id: '/_public/logout/callback'
      path: '/logout/callback'
      fullPath: '/logout/callback'
      preLoaderRoute: typeof PublicLogoutCallbackRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/login/callback': {
      id: '/_public/login/callback'
      path: '/login/callback'
      fullPath: '/login/callback'
      preLoaderRoute: typeof PublicLoginCallbackRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/_page/overview': {
      id: '/_public/_page/overview'
      path: '/overview'
      fullPath: '/overview'
      preLoaderRoute: typeof PublicPageOverviewRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/_page/lab': {
      id: '/_public/_page/lab'
      path: '/lab'
      fullPath: '/lab'
      preLoaderRoute: typeof PublicPageLabRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/_page/home': {
      id: '/_public/_page/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof PublicPageHomeRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/_page/contact': {
      id: '/_public/_page/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof PublicPageContactRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/_page/about': {
      id: '/_public/_page/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof PublicPageAboutRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_protected/_page/doodle': {
      id: '/_protected/_page/doodle'
      path: '/doodle'
      fullPath: '/doodle'
      preLoaderRoute: typeof ProtectedPageDoodleRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/_page/code-editor': {
      id: '/_protected/_page/code-editor'
      path: '/code-editor'
      fullPath: '/code-editor'
      preLoaderRoute: typeof ProtectedPageCodeEditorRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/_page/channel/': {
      id: '/_protected/_page/channel/'
      path: '/channel'
      fullPath: '/channel'
      preLoaderRoute: typeof ProtectedPageChannelIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/_page/channel/$id': {
      id: '/_protected/_page/channel/$id'
      path: '/channel/$id'
      fullPath: '/channel/$id'
      preLoaderRoute: typeof ProtectedPageChannelIdRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface ProtectedRouteChildren {
  ProtectedPageCodeEditorRoute: typeof ProtectedPageCodeEditorRoute
  ProtectedPageDoodleRoute: typeof ProtectedPageDoodleRoute
  ProtectedPageChannelIdRoute: typeof ProtectedPageChannelIdRoute
  ProtectedPageChannelIndexRoute: typeof ProtectedPageChannelIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedPageCodeEditorRoute: ProtectedPageCodeEditorRoute,
  ProtectedPageDoodleRoute: ProtectedPageDoodleRoute,
  ProtectedPageChannelIdRoute: ProtectedPageChannelIdRoute,
  ProtectedPageChannelIndexRoute: ProtectedPageChannelIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

interface PublicRouteChildren {
  PublicIndexRoute: typeof PublicIndexRoute
  PublicPageAboutRoute: typeof PublicPageAboutRoute
  PublicPageContactRoute: typeof PublicPageContactRoute
  PublicPageHomeRoute: typeof PublicPageHomeRoute
  PublicPageLabRoute: typeof PublicPageLabRoute
  PublicPageOverviewRoute: typeof PublicPageOverviewRoute
  PublicLoginCallbackRoute: typeof PublicLoginCallbackRoute
  PublicLogoutCallbackRoute: typeof PublicLogoutCallbackRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicIndexRoute: PublicIndexRoute,
  PublicPageAboutRoute: PublicPageAboutRoute,
  PublicPageContactRoute: PublicPageContactRoute,
  PublicPageHomeRoute: PublicPageHomeRoute,
  PublicPageLabRoute: PublicPageLabRoute,
  PublicPageOverviewRoute: PublicPageOverviewRoute,
  PublicLoginCallbackRoute: PublicLoginCallbackRoute,
  PublicLogoutCallbackRoute: PublicLogoutCallbackRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
